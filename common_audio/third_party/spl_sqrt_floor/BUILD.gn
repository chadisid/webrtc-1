# Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.
#
# Use of this source code is governed by a BSD-style license
# that can be found in the ../../../LICENSE file in the root of the source
# tree. An additional intellectual property rights grant can be found
# in the file PATENTS.  All contributing project authors may
# be found in the AUTHORS file in the root of the source tree.

import("../../../webrtc.gni")

if (current_cpu == "arm") {
  spl_sqrt_floor_arm_asm_sources = [
    "spl_sqrt_floor_arm.S",
  ]

  action_foreach("compile_spl_sqrt_floor_arm_assembly") {
    if (is_win) {
      script = "//webrtc/build/Win_ARM_Tools/run_arm_asm_compiler.py"
    } else {
      script = "//third_party/openmax_dl/dl/run_perl.py"
    }
    sources = spl_sqrt_floor_arm_asm_sources
    outputs = [
      "$target_gen_dir/{{source_file_part}}.obj",
    ]

    args = [
      "-s",
      "../../webrtc/build/gas-preprocessor/gas-preprocessor.pl",
      "-i",
      "{{source}}",
      "-o",
      rebase_path("$target_gen_dir/{{source_file_part}}.obj"),
      "-p",
      "environment.store_" + current_cpu,
      "-l",
      "../../",
      "-a",
      current_cpu
    ]
  }

}

rtc_source_set("spl_sqrt_floor") {
  visibility = [ "../..:common_audio_c" ]
  sources = [
    "spl_sqrt_floor.h",
  ]
  deps = []
  if (current_cpu == "arm") {
    if (current_os == "winuwp" && target_os == "winuwp" && !is_clang) {
      sources += get_target_outputs(":compile_spl_sqrt_floor_arm_assembly")
      deps = [
        ":compile_spl_sqrt_floor_arm_assembly",
      ]
    } else {
      sources += spl_sqrt_floor_arm_asm_sources
    }
    deps += [ "../../../rtc_base/system:asm_defines" ]
  } else if (current_cpu == "mipsel") {
    sources += [ "spl_sqrt_floor_mips.c" ]
  } else {
    sources += [ "spl_sqrt_floor.c" ]
  }
}
